;; Auto-generated. Do not edit!


(when (boundp 'servo0::angleFeedback)
  (if (not (find-package "SERVO0"))
    (make-package "SERVO0"))
  (shadow 'angleFeedback (find-package "SERVO0")))
(unless (find-package "SERVO0::ANGLEFEEDBACK")
  (make-package "SERVO0::ANGLEFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude angleFeedback.msg.html


(defclass servo0::angleFeedback
  :super ros::object
  :slots (_feedback ))

(defmethod servo0::angleFeedback
  (:init
   (&key
    ((:feedback __feedback) 0.0)
    )
   (send-super :init)
   (setq _feedback (float __feedback))
   self)
  (:feedback
   (&optional __feedback)
   (if __feedback (setq _feedback __feedback)) _feedback)
  (:serialization-length
   ()
   (+
    ;; float32 _feedback
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _feedback
       (sys::poke _feedback (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _feedback
     (setq _feedback (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get servo0::angleFeedback :md5sum-) "d90953f904aa7b8e8d8b4f90a196f18f")
(setf (get servo0::angleFeedback :datatype-) "servo0/angleFeedback")
(setf (get servo0::angleFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
float32 feedback


")



(provide :servo0/angleFeedback "d90953f904aa7b8e8d8b4f90a196f18f")


